name: Integrate infrastructure
on:
  pull_request:
    types: [ opened, reopened, synchronize ]
    paths:
      - .github/workflows/integrate-infrastructure.yaml
      - "infra/terraform/**"
  push:
    branches:
      - main
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  check-format:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'pull_request' && github.head_ref || github.ref }}
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Check code format
        run: terraform fmt -check -recursive
  validation:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'pull_request' && github.head_ref || github.ref }}
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Initialize Terraform working directory
        run: terraform -chdir=./infra/terraform init -backend=false -reconfigure
      - name: Validate configuration files
        run: terraform -chdir=./infra/terraform validate -no-color
#  plan:
#    if: github.event_name == 'pull_request'
#    runs-on: ubuntu-22.04
#    permissions:
#      contents: write
#      pull-requests: write
#    env:
#      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#        with:
#          ref: ${{ github.event_name == 'pull_request' && github.head_ref || github.ref }}
#      - name: Set up Terraform
#        uses: hashicorp/setup-terraform@v3
#      - name: Initialize terraform working directory
#        run: terraform -chdir=./infra/terraform init -backend-config=stg.tfbackend -reconfigure
#      - id: plan
#        name: Generates a execution plan
#        run: terraform -chdir=./infra/terraform plan -no-color
#        continue-on-error: true
#        env:
#          TF_VAR_env: stg
#          TF_VAR_api_image_tag: ${{ github.sha }}
#      - name: Create comment
#        uses: actions/github-script@v7
#        with:
#          script: |
#            const output = `Terraform Plan: \`${{ steps.plan.outcome }}\`
#            <details><summary>Show plan</summary>
#
#            \`\`\`
#            ${{ steps.plan.outputs.stdout }}
#            \`\`\`
#            </details>`
#            github.rest.issues.createComment({
#              issue_number: context.issue.number,
#              owner: context.repo.owner,
#              repo: context.repo.repo,
#              body: output
#            })
